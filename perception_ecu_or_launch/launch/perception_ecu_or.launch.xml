<launch>
  <arg name="use_fsync" default="false" description="Flag to switch generating trigger signal for camera shutter"/>
  <arg name="camera_id" default="0" description="Camera index"/>
  <arg name="use_sensor_data_qos" default="false" description="Flat to be passed to v4l2_camera.launch.py. If true, the reliability of image topic QoS will be BEST_EFFORT, otherwise be RELIABLE"/>
  <arg name="data_path" default="$(find-pkg-share tensorrt_yolox)/data" description="Path to the directory that contains YOLOX models"/>
  <arg name="model_file" default="yolox-tiny.onnx" description="YOLOX model file in ONNX format"/>
  <arg name="label_file" default="label.txt" description="YOLOX label file"/>

  <group>
    <let name="current_dir" value="$(dirname)"/> <!-- Since $(dirname) result may be overwritten during the following process, taking cache here-->
    <let name="namespace" value="/sensing/camera"/>
    <let name="image_topic" value="image_raw"/>
    <let name="camera_name" value="camera$(var camera_id)"/>
    <let name="v4l2_camera_param_path" value="$(find-pkg-share individual_params)/config/default/v4l2_camera.param.yaml"/>
    <let name="camera_info_url" value="file://$(find-pkg-share individual_params)/config/default/c1_camera_info.yaml"/>
    <let name="trigger_param_path" value="$(find-pkg-share individual_params)/config/default/trigger.param.yaml"/>

    <!-- Create container node to pack camera node and object detector -->
    <let name="container_name" value="object_recognition_continer$(var camera_id)"/>
    <include file="$(var current_dir)/object_recognition_container.launch.py">
      <arg name="container" value="$(var container_name)"/>
    </include>

    <!-- Launch v4l2_camera inside the container node -->
    <include file="$(find-pkg-share v4l2_camera)/launch/v4l2_camera.launch.py">
      <arg name="container" value="$(var container_name)"/>
      <arg name="v4l2_camera_namespace" value="$(var namespace)"/>
      <arg name="image_topic" value="$(var image_topic)"/>
      <arg name="camera_name" value="$(var camera_name)"/>
      <arg name="v4l2_camera_param_path" value="$(var v4l2_camera_param_path)"/>
      <arg name="camera_info_url" value="$(var camera_info_url)"/>
      <arg name="use_sensor_data_qos" value="$(var use_sensor_data_qos)"/>
    </include>

    <!-- Launch tensorrt_yolox inside the container node -->
    <include file="$(var current_dir)/object_recognition.launch.py">
      <arg name="container" value="$(var container_name)"/>
      <arg name="camera_id" value="$(var camera_id)"/>
      <arg name="data_path" value="$(var data_path)"/>
      <arg name="model_file" value="$(var model_file)"/>
      <arg name="label_file" value="$(var label_file)"/>
      <arg name="input_image_topic" value="$(var namespace)/$(var camera_name)/$(var image_topic)"/>
    </include>

    <!-- Launch sensor_trigger outside the container node  -->
    <group if="$(var use_fsync)">
      <node pkg="sensor_trigger" exec="sensor_trigger_exe" namespace="$(var namespace)/$(var camera_name)">
        <param from="$(var trigger_param_path)"/>
      </node>
    </group>
  </group>
</launch>
